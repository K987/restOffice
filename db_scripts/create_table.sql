CREATE TABLE RO_USER
(
  USER_ID SERIAL NOT NULL,
  PRIMARY KEY (USER_ID)
);

--TRX
CREATE TABLE PARTNER
(
  PARTNER_ID SERIAL NOT NULL,
  BANK_ACCOUNT_NO VARCHAR(30),
  LEGAL_ADDRESS VARCHAR(200),
  LEGAL_NAME VARCHAR(100) NOT NULL,
  SHORT_NAME VARCHAR(50),
  TAX_ID_NO VARCHAR(50),
  VALD_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (PARTNER_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (LEGAL_NAME)
);

CREATE TABLE PARTNER_CONTACT
(
  PARTNER_CONTACT_ID SERIAL NOT NULL,
  CONTACT_PERSON_NAME VARCHAR(50) NOT NULL,
  PHONE_NO VARCHAR(50),
  EMAIL_ADDR VARCHAR(253),
  CELL_PHONE_NO VARCHAR(50),
  PARTNER_ID INTEGER NOT NULL,
  PRIMARY KEY (PARTNER_CONTACT_ID),
  FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER(PARTNER_ID)
);

CREATE TABLE COST_CENTER_CATEGORY
(
  COST_CENTER_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500),
  PARENT_COST_CENTER_CATEGORY_ID INTEGER,
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (PARENT_COST_CENTER_CATEGORY_ID) REFERENCES COST_CENTER_CATEGORY(COST_CENTER_CATEGORY_ID),
  PRIMARY KEY (COST_CENTER_CATEGORY_ID)
);

CREATE TABLE COST_CATEGORY
(
  COST_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500),
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  PRIMARY KEY (COST_CATEGORY_ID)
);

CREATE TABLE INCOME_CATEGORY
(
  INCOME_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500),
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  PRIMARY KEY (INCOME_CATEGORY_ID)
);

CREATE TABLE DEPOSIT_BOX
(
  DEPOSIT_BOX_ID SERIAL NOT NULL,
  DEPOSIT_BOX_TYPE_CD INTEGER NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500) NOT NULL,
  PRIMARY KEY (DEPOSIT_BOX_ID)
);

CREATE TABLE TRANSITION
(
  TRANSITION_ID SERIAL NOT NULL,
  TRANSITION_DTTM DATE NOT NULL,
  TRANSITION_AMT NUMERIC(12,2) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500) NOT NULL,
  FROM_DEPOSIT_BOX_ID INTEGER NOT NULL,
  TO_DEPOSIT_BOX_ID INTEGER NOT NULL,
  USER_ID INTEGER NOT NULL,
  PRIMARY KEY (TRANSITION_ID),
  FOREIGN KEY (FROM_DEPOSIT_BOX_ID) REFERENCES DEPOSIT_BOX(DEPOSIT_BOX_ID),
  FOREIGN KEY (TO_DEPOSIT_BOX_ID) REFERENCES DEPOSIT_BOX(DEPOSIT_BOX_ID),
  FOREIGN KEY (USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE EXPENSE
(
  EXPENSE_ID SERIAL NOT NULL,
  DOCUMENT_NO VARCHAR(50) NOT NULL,
  PARTNER_ID INTEGER NOT NULL,
  DUE_DT DATE NOT NULL,
  EXPIRY_DT DATE,
  ISSUE_DT DATE NOT NULL,
  PAID_DT DATE,
  DOCUMENT_TYPE_CD INTEGER NOT NULL,
  PAYMENT_TYPE_CD INTEGER NOT NULL,
  DEPOSIT_BOX_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (EXPENSE_ID),
  FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER(PARTNER_ID),
  FOREIGN KEY (DEPOSIT_BOX_ID) REFERENCES DEPOSIT_BOX(DEPOSIT_BOX_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (DOCUMENT_NO)
);

CREATE TABLE EXPENSE_DETAIL
(
  EXPENSE_DETAIL_ID SERIAL NOT NULL,
  NET_AMT NUMERIC(12,2),
  GROSS_AMT NUMERIC(12,2) NOT NULL,
  VAT_PCT NUMERIC(2,2),
  DESCRIPTION_TXT VARCHAR(500) NOT NULL,
  COST_CATEGORY_ID INTEGER NOT NULL,
  COST_CENTER_CATEGORY_ID INTEGER NOT NULL,
  EXPENSE_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (EXPENSE_DETAIL_ID),
  FOREIGN KEY (COST_CATEGORY_ID) REFERENCES COST_CATEGORY(COST_CATEGORY_ID),
  FOREIGN KEY (COST_CENTER_CATEGORY_ID) REFERENCES COST_CENTER_CATEGORY(COST_CENTER_CATEGORY_ID),
  FOREIGN KEY (EXPENSE_ID) REFERENCES EXPENSE(EXPENSE_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE INCOME
(
  INCOME_ID SERIAL NOT NULL,
  DOCUMENT_NO VARCHAR(50) NOT NULL,
  PARTNER_ID INTEGER NOT NULL,
  DUE_DT DATE NOT NULL,
  EXPIRY_DT DATE,
  ISSUE_DT DATE NOT NULL,
  PAID_DT DATE,
  DOCUMENT_TYPE_CD INTEGER NOT NULL,
  PAYMENT_TYPE_CD INTEGER NOT NULL,
  DEPOSIT_BOX_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (INCOME_ID),
  FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER(PARTNER_ID),
  FOREIGN KEY (DEPOSIT_BOX_ID) REFERENCES DEPOSIT_BOX(DEPOSIT_BOX_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (DOCUMENT_NO)
);

CREATE TABLE INCOME_DETAIL
(
  INCOME_DETAIL_ID SERIAL NOT NULL,
  INCOME_NET_AMT NUMERIC(12,2),
  INCOME_GROSS_AMT NUMERIC(12,2) NOT NULL,
  INCOME_VAT_PCT NUMERIC(2,2),
  DESCRIPTION_TXT VARCHAR(500) NOT NULL,
  INCOME_ID INTEGER NOT NULL,
  INCOME_CATEGORY_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (INCOME_DETAIL_ID),
  FOREIGN KEY (INCOME_ID) REFERENCES INCOME(INCOME_ID),
  FOREIGN KEY (INCOME_CATEGORY_ID) REFERENCES INCOME_CATEGORY(INCOME_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

--DAILY TRX
CREATE TABLE JOB_CATEGORY
(
  JOB_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  JOB_HOURLY_WAGE_AMT NUMERIC(12,2) NOT NULL,
  JOB_TIP_SHARE_PCT NUMERIC(2,2) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500),
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (JOB_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE INCOME_FORM_CATEGORY
(
  INCOME_FORM_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500) NOT NULL,
  ACCOUNTED_INCOME_FLG BOOL NOT NULL,
  CONVERSTION_RATE NUMERIC(12,2) NOT NULL,
  PAYMENT_TYPE_CD INTEGER NOT NULL,
  REGISTER_TYPE_ID INTEGER NOT NULL,
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (INCOME_FORM_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE REGISTER_CATEGORY
(
  REGISTER_CATEGORY_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION_TXT VARCHAR(500),
  REGISTER_TYPE_CD INTEGER NOT NULL,
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (REGISTER_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE EMPLOYEE
(
  EMPLOYEE_ID SERIAL NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  EMPLOYEE_HORULY_WAGE_AMT NUMERIC(12,2),
  EMPLOYEE_TIP_SHARE_PCT NUMERIC(2,2),
  MODIFICATION_STATUS_CD BOOL NOT NULL,
  JOB_CATEGORY_ID INTEGER NOT NULL,
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (EMPLOYEE_ID),
  FOREIGN KEY (JOB_CATEGORY_ID) REFERENCES JOB_CATEGORY(JOB_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE REGISTER
(
  REGISTER_ID SERIAL NOT NULL,
  REGISTER_NO VARCHAR(50) NOT NULL,
  VALID_FROM_DTTM DATE NOT NULL,
  VALID_TO_DTTM DATE NOT NULL,
  CREATE_USER_ID INTEGER NOT NULL,
  LAST_UPDATE_USER_ID INTEGER,
  REGISTER_CATEGORY_ID INTEGER NOT NULL,
  PRIMARY KEY (REGISTER_ID),
  FOREIGN KEY (REGISTER_CATEGORY_ID) REFERENCES REGISTER_CATEGORY(REGISTER_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (REGISTER_NO, VALID_TO_DTTM)
);

CREATE TABLE DAILY_CLOSE
(
  DAILY_CLOSE_ID SERIAL NOT NULL,
  CLOSE_DAY_DT DATE NOT NULL,
  POS_TOTAL_AMT NUMERIC(12,2) NOT NULL,
  REGISTERED_TOTAL_AMT NUMERIC(12,2) NOT NULL,
  INCOME_TOTAL_AMT NUMERIC(12,2) NOT NULL,
  BOOKED_DTTM DATE,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (DAILY_CLOSE_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID)
);

CREATE TABLE DAILY_CLOSE_DETAIL
(
  DAILY_CLOSE_DETAIL_ID SERIAL NOT NULL,
  INCOME_FORM_CATEGORY_ID INTEGER NOT NULL,
  NOT_REGISTERED_AMT NUMERIC(12,2) NOT NULL,
  REGISTERED_AMT NUMERIC(12,2) NOT NULL,
  TOTAL_AMT NUMERIC(12,2) NOT NULL,
  DAILY_CLOSE_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (DAILY_CLOSE_DETAIL_ID),
  FOREIGN KEY (DAILY_CLOSE_ID) REFERENCES DAILY_CLOSE(DAILY_CLOSE_ID),
  FOREIGN KEY (INCOME_FORM_CATEGORY_ID) REFERENCES INCOME_FORM_CATEGORY(INCOME_FORM_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (DAILY_CLOSE_ID, INCOME_FORM_CATEGORY_ID)
);

CREATE TABLE REGISTER_CLOSE
(
  REGISTER_CLOSE_ID SERIAL NOT NULL,
  CLOSE_NO INT NOT NULL,
  CLOSE_DT DATE NOT NULL,
  CLOSE_AMT NUMERIC(12,2) NOT NULL,
  REGISTER_ID INTEGER NOT NULL,
  DAILY_CLOSE_ID INTEGER,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (REGISTER_CLOSE_ID),
  FOREIGN KEY (REGISTER_ID) REFERENCES REGISTER(REGISTER_ID),
  FOREIGN KEY (DAILY_CLOSE_ID) REFERENCES DAILY_CLOSE(DAILY_CLOSE_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (CLOSE_NO, REGISTER_ID)
);

CREATE TABLE EMPLOYEE_SHIFT
(
  EMPLOYEE_SHIFT_ID SERIAL NOT NULL,
  START_DTTM DATE NOT NULL,
  END_DTTM DATE NOT NULL,
  POS_INCOME_AMT NUMERIC(12,2) NOT NULL,
  ACTUAL_HOURLY_WAGE NUMERIC(12,2),
  ACTUAL_TIP_SHARE_PCT NUMERIC(2,2),
  EMPLOYEE_ID INTEGER NOT NULL,
  DAILY_CLOSE_ID INTEGER,
  ACTUAL_JOB_CATEGORY_ID INTEGER,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (EMPLOYEE_SHIFT_ID),
  FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID),
  FOREIGN KEY (DAILY_CLOSE_ID) REFERENCES DAILY_CLOSE(DAILY_CLOSE_ID),
  FOREIGN KEY (ACTUAL_JOB_CATEGORY_ID) REFERENCES JOB_CATEGORY(JOB_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (EMPLOYEE_ID, DAILY_CLOSE_ID, ACTUAL_JOB_CATEGORY_ID)
);

CREATE TABLE EMPLOYEE_SHIFT_INCOME
(
  EMPLOYEE_SHIFT_INCOME_ID SERIAL NOT NULL,
  INCOME_AMT NUMERIC(12,2) NOT NULL,
  EMPLOYEE_SHIFT_ID INTEGER NOT NULL,
  INCOME_FORM_ID INTEGER NOT NULL,
  CREATE_DTTM DATE NOT NULL,
  DELETE_DTTM DATE,
  LAST_UPDATE_DTTM DATE,
  CREATE_USER_ID INTEGER NOT NULL,
  DELETE_USER_ID INTEGER,
  LAST_UPDATE_USER_ID INTEGER,
  PRIMARY KEY (EMPLOYEE_SHIFT_INCOME_ID),
  FOREIGN KEY (EMPLOYEE_SHIFT_ID) REFERENCES EMPLOYEE_SHIFT(EMPLOYEE_SHIFT_ID),
  FOREIGN KEY (INCOME_FORM_ID) REFERENCES INCOME_FORM_CATEGORY(INCOME_FORM_CATEGORY_ID),
  FOREIGN KEY (CREATE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (DELETE_USER_ID) REFERENCES RO_USER(USER_ID),
  FOREIGN KEY (LAST_UPDATE_USER_ID) REFERENCES RO_USER(USER_ID),
  UNIQUE (EMPLOYEE_SHIFT_ID, INCOME_FORM_ID)
);

CREATE TABLE DAILY_CLOSE_X_INCOME
(
  DAILY_CLOSE_X_INCOME_ID SERIAL NOT NULL,
  DAILY_CLOSE_ID INTEGER NOT NULL,
  INCOME_ID INTEGER NOT NULL,
  PRIMARY KEY (DAILY_CLOSE_X_INCOME_ID),
  FOREIGN KEY (DAILY_CLOSE_ID) REFERENCES DAILY_CLOSE(DAILY_CLOSE_ID),
  FOREIGN KEY (INCOME_ID) REFERENCES INCOME(INCOME_ID)
);
